@use '~@angular/material' as mat;
@use "~@angular/material/button/button-base";
@use 'sass:map';
@use './src/app/components/carousel/carousel-theme' as carousel;

@include mat.core();

//Light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$light-warn: mat.define-palette(mat.$yellow-palette);

//My theme
$my-theme: mat.define-light-theme(
    (color: (primary: $light-primary, accent: $light-accent, warn: $light-warn,),));

//Dark theme
$dark-primary :  mat.define-palette(mat.$blue-grey-palette);
$dark-accent  :  mat.define-palette(mat.$deep-orange-palette, A100);
$dark-warn    :  mat.define-palette(mat.$teal-palette);
$dark-theme   :  mat.define-dark-theme((
  color: (primary: $dark-primary, accent: $dark-accent, warn: $dark-warn,),
  typography:mat.define-typography-config(
  $font-family:serif,
  )
));

//my Theme Colors
$colorConf:mat.get-color-config($my-theme);
$primary-palette: map.get($colorConf, 'primary');
$accent-palette:  map.get($colorConf, 'accent');
$warn-palette:    map.get($colorConf, 'warn');
$is-dark-theme:   map.get($colorConf, 'is-dark');

//Typography Config
$typography-config: mat.get-typography-config($my-theme);
//$my-font-family: mat.font-family($typography-config);

//My map of colors
$primary-light:mat.get-color-from-palette($primary-palette,100);
$primary-dark:mat.get-color-from-palette($primary-palette,700);

$asdd:mat.get-color-config($my-theme);
$fd:map.get($asdd,primary);
$colorss:mat.get-color-from-palette($fd,100);
.foo-button{
  background-color: $colorss;
}

//Specific componenets theme 'as color as typography'
@include mat.core-theme($my-theme);
@include mat.button-theme($my-theme);
@include mat.snack-bar-theme($my-theme);
@include mat.sidenav-theme($my-theme);
@include mat.select-theme($my-theme);
@include mat.toolbar-theme($my-theme);
@include mat.icon-theme($my-theme);
@include mat.list-theme($my-theme);
@include mat.form-field-theme($my-theme);
@include mat.progress-bar-theme($my-theme);
@include mat.input-theme($my-theme);
@include mat.divider-theme($my-theme);
@include mat.snack-bar-theme($my-theme);
@include mat.menu-theme($my-theme);
@include mat.progress-spinner-theme($my-theme);
@include mat.tooltip-theme($my-theme);
//@include mat.all-component-typographies($my-theme);

// Apply the dark theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).

.dark-theme {
  @include mat.core-color($dark-theme);
  @include mat.tooltip-color($dark-theme);
  @include mat.button-color($dark-theme);
  @include mat.sidenav-color($dark-theme);
  @include mat.select-color($dark-theme);
  @include mat.toolbar-color($dark-theme);
  @include mat.icon-color($dark-theme);
  @include mat.list-color($dark-theme);
  @include mat.form-field-color($dark-theme);
  @include mat.progress-bar-color($dark-theme);
  @include mat.input-color($dark-theme);
  @include mat.divider-color($dark-theme);
  @include mat.snack-bar-color($dark-theme);
  @include mat.menu-color($dark-theme);
  @include mat.progress-spinner-color($dark-theme);
}

//:root {
//  --blue1: mat.get-color-from-palette(mat.define-palette(mat.$indigo-palette), 600);;
//  --blue2: mat.get-color-from-palette(mat.$indigo-palette,200);
//  --blue3: mat.get-color-from-palette(mat.$indigo-palette,300);
//  --blue4: mat.get-color-from-palette(mat.$indigo-palette,400);
//  --blue5: mat.get-color-from-palette(mat.$indigo-palette,500);
//  --white: #ffffff;
//}
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($dark-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

$my-back: mat.get-color-from-palette(mat.define-palette(mat.$indigo-palette));
$my-back-darker: mat.get-color-from-palette(
    mat.define-palette(mat.$indigo-palette),
    600
);
$my-back-light: mat.get-color-from-palette(
    mat.define-palette(mat.$indigo-palette),
    100
);
$my-palette: mat.define-palette(mat.$indigo-palette);
//@include mat.strong-focus-indicators((
//  border-style: solid,
//  border-width: 2px,
//  border-radius: 12px,
//));
//@include mat.strong-focus-indicators-theme($dark-theme);
$my-palette: mat.define-palette(mat.$indigo-palette);
.my-custom-style {
  background: mat.get-color-from-palette($my-palette, 900);
  color: mat.get-color-from-palette($my-palette, 500 -contrast);
}

.my-custom-darker-style {
  background: mat.get-color-from-palette($my-palette, lighter);
  color: mat.get-color-from-palette($my-palette, darker-contrast);
}

.primary {
  color: mat.get-color-from-palette($my-palette, 500 -contrast);
  background-color: mat.get-color-from-palette($light-primary, 300);
}

.primary-darker {
  color: mat.get-color-from-palette($my-palette, darker-contrast);
  background-color: mat.get-color-from-palette($light-primary, 600);
}

.btn:hover {
  color: mat.get-color-from-palette($light-primary, darker-contrast);
  background-color: mat.get-color-from-palette($light-primary, 300);
  transform: scale(1.05);
  z-index: 1;
}

//$kids-typography: mat.define-typography-config(
//  // Specify "Comic Sans" as the default font family for all levels.
//  $font-family: 'Comic Sans',
//);
@include carousel.theme($my-theme);
